[
  {
    "ContainingType": "FileStorage.Controllers.AuthentificationController",
    "Method": "SigninUser",
    "RelativePath": "v{version}/auth/signin",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "user",
        "Type": "FileStorage.Models.Incoming.User.UserSignInDto",
        "IsRequired": true
      },
      {
        "Name": "version",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "FileStorage.Models.Outcoming.UserAuthResultDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "FileStorage.Controllers.AuthentificationController",
    "Method": "SignupUser",
    "RelativePath": "v{version}/auth/signup",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "user",
        "Type": "FileStorage.Models.Incoming.User.UserSignUpDto",
        "IsRequired": true
      },
      {
        "Name": "version",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "FileStorage.Models.Outcoming.UserAuthResultDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "FileStorage.Controllers.AuthentificationController",
    "Method": "VerifyUserSignup",
    "RelativePath": "v{version}/auth/verify/{code}",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "code",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "version",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FileStorage.Controllers.BinController",
    "Method": "GetBin",
    "RelativePath": "v{version}/bin/{token}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "token",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "version",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FileStorage.Controllers.BinController",
    "Method": "DeleteBinClean",
    "RelativePath": "v{version}/bin/clean",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "version",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FileStorage.Controllers.BinController",
    "Method": "PatchBinRestore",
    "RelativePath": "v{version}/bin/restore",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "version",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FileStorage.Controllers.FilesController",
    "Method": "GetFiles",
    "RelativePath": "v{version}/files",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "version",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[FileStorage.Models.Outcoming.File.FileInfoDto, FileStorage.Main, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "FileStorage.Controllers.FilesController",
    "Method": "PostFile",
    "RelativePath": "v{version}/files",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Files",
        "Type": "System.Collections.Generic.List\u00601[[Microsoft.AspNetCore.Http.IFormFile, Microsoft.AspNetCore.Http.Features, Version=7.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]",
        "IsRequired": false
      },
      {
        "Name": "FolderToken",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "version",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FileStorage.Controllers.FilesController",
    "Method": "DeleteFile",
    "RelativePath": "v{version}/files/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "version",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FileStorage.Controllers.FilesController",
    "Method": "PatchFilesBin",
    "RelativePath": "v{version}/files/bin/{id}",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "version",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FileStorage.Controllers.FilesController",
    "Method": "PatchAllFilesBin",
    "RelativePath": "v{version}/files/bin/all",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "version",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FileStorage.Controllers.FilesController",
    "Method": "GetDownloadFile",
    "RelativePath": "v{version}/files/download/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "version",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FileStorage.Controllers.FilesController",
    "Method": "DownloadAllFiles",
    "RelativePath": "v{version}/files/download/all",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "version",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FileStorage.Controllers.FilesController",
    "Method": "PatchFileElect",
    "RelativePath": "v{version}/files/elect/{id}",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "version",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FileStorage.Controllers.FilesController",
    "Method": "PatchFileName",
    "RelativePath": "v{version}/files/name/{id}",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "fileData",
        "Type": "FileStorage.Models.Incoming.File.FilePatchNameDto",
        "IsRequired": true
      },
      {
        "Name": "version",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FileStorage.Controllers.FilesController",
    "Method": "PatchFilesPath",
    "RelativePath": "v{version}/files/path/{id}",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "folderData",
        "Type": "FileStorage.Main.Models.Incoming.File.FilePatchPathDto",
        "IsRequired": true
      },
      {
        "Name": "version",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FileStorage.Controllers.FilesController",
    "Method": "PatchFileRestore",
    "RelativePath": "v{version}/files/restore/{id}",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "version",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FileStorage.Controllers.FoldersController",
    "Method": "PostFolder",
    "RelativePath": "v{version}/folders",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "folderData",
        "Type": "FileStorage.Models.Incoming.Folder.FolderCreateDto",
        "IsRequired": true
      },
      {
        "Name": "version",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "FileStorage.Models.Db.Folder",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "FileStorage.Controllers.FoldersController",
    "Method": "GetFolderData",
    "RelativePath": "v{version}/folders/{token}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "token",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "version",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "FileStorage.Models.Outcoming.Folder.FolderValuesDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "FileStorage.Controllers.FoldersController",
    "Method": "DeleteFolder",
    "RelativePath": "v{version}/folders/{token}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "token",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "version",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FileStorage.Controllers.FoldersController",
    "Method": "PatchFolderAccess",
    "RelativePath": "v{version}/folders/access/{token}",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "token",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "folderData",
        "Type": "FileStorage.Models.Incoming.Folder.FolderPatchAccessDto",
        "IsRequired": true
      },
      {
        "Name": "version",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FileStorage.Controllers.FoldersController",
    "Method": "PatchFolderBin",
    "RelativePath": "v{version}/folders/bin/{token}",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "token",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "version",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FileStorage.Controllers.FoldersController",
    "Method": "GetFolderBinName",
    "RelativePath": "v{version}/folders/binName/{token}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "token",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "version",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FileStorage.Controllers.FoldersController",
    "Method": "PatchFolderName",
    "RelativePath": "v{version}/folders/color/{token}",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "token",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "folderData",
        "Type": "FileStorage.Models.Incoming.Folder.FolderPatchColorDto",
        "IsRequired": true
      },
      {
        "Name": "version",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FileStorage.Controllers.FoldersController",
    "Method": "GetFolder",
    "RelativePath": "v{version}/folders/download/{token}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "token",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "version",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FileStorage.Controllers.FoldersController",
    "Method": "PatchFolderElect",
    "RelativePath": "v{version}/folders/elect/{token}",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "token",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "version",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FileStorage.Controllers.FoldersController",
    "Method": "PatchAllFoldersElect",
    "RelativePath": "v{version}/folders/elect/all",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "version",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FileStorage.Controllers.FoldersController",
    "Method": "GetFolderElected",
    "RelativePath": "v{version}/folders/elected",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "version",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FileStorage.Controllers.FoldersController",
    "Method": "PatchFolderName",
    "RelativePath": "v{version}/folders/name/{token}",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "token",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "folderData",
        "Type": "FileStorage.Models.Incoming.Folder.FolderPatchNameDto",
        "IsRequired": true
      },
      {
        "Name": "version",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FileStorage.Controllers.FoldersController",
    "Method": "GetFolderPath",
    "RelativePath": "v{version}/folders/path/{token}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "token",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "version",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[FileStorage.Models.Outcoming.Folder.FolderSinglePath, FileStorage.Main, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "FileStorage.Controllers.FoldersController",
    "Method": "PatchFolderPath",
    "RelativePath": "v{version}/folders/path/{token}",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "token",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "folderData",
        "Type": "FileStorage.Models.Incoming.Folder.FolderPatchPathDto",
        "IsRequired": true
      },
      {
        "Name": "version",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FileStorage.Controllers.FoldersController",
    "Method": "GetFolderrecent",
    "RelativePath": "v{version}/folders/recent",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "version",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FileStorage.Controllers.FoldersController",
    "Method": "PatchFolderRestore",
    "RelativePath": "v{version}/folders/restore/{token}",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "token",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "version",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FileStorage.Controllers.FoldersController",
    "Method": "PatchFolderView",
    "RelativePath": "v{version}/folders/view/{token}",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "token",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "version",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FileStorage.Controllers.HealthCheckController",
    "Method": "HealthCheck",
    "RelativePath": "v{version}/healthz",
    "HttpMethod": "OPTIONS",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "version",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FileStorage.Controllers.StatisticController",
    "Method": "GetFilesCalendar",
    "RelativePath": "v{version}/statistic/calendar",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "version",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[FileStorage.Models.Outcoming.Statistic.PieDto, FileStorage.Main, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "FileStorage.Controllers.StatisticController",
    "Method": "GetFilesGraph",
    "RelativePath": "v{version}/statistic/graph",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "version",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[FileStorage.Models.Outcoming.Statistic.PieDto, FileStorage.Main, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "FileStorage.Controllers.StatisticController",
    "Method": "GetFilesPie",
    "RelativePath": "v{version}/statistic/pie/{count}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "count",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "version",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[FileStorage.Models.Outcoming.Statistic.PieDto, FileStorage.Main, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "FileStorage.Controllers.StatisticController",
    "Method": "GetFilesTree",
    "RelativePath": "v{version}/statistic/tree",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "version",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "FileStorage.Models.Outcoming.Statistic.StatisticTreeDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "FileStorage.Controllers.TestsController",
    "Method": "GetFileBe",
    "RelativePath": "v{version}/tests/be",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "version",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FileStorage.Controllers.TestsController",
    "Method": "GetFiles",
    "RelativePath": "v{version}/tests/files",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "version",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[FileStorage.Models.Db.File, FileStorage.Main, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "FileStorage.Controllers.TestsController",
    "Method": "GetFileTypes",
    "RelativePath": "v{version}/tests/fileTypes",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "version",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[FileStorage.Models.Db.FileType, FileStorage.Main, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "FileStorage.Controllers.TestsController",
    "Method": "GetFolders",
    "RelativePath": "v{version}/tests/folders",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "version",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[FileStorage.Models.Outcoming.Folder.FolderTreeDto, FileStorage.Main, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "FileStorage.Controllers.TestsController",
    "Method": "GetLogs",
    "RelativePath": "v{version}/tests/logs",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "version",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FileStorage.Controllers.UsersController",
    "Method": "DeleteUser",
    "RelativePath": "v{version}/users/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "version",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FileStorage.Controllers.UsersController",
    "Method": "PathUserBirthday",
    "RelativePath": "v{version}/users/account",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "newData",
        "Type": "FileStorage.Models.Incoming.User.UserPatchAccountDto",
        "IsRequired": true
      },
      {
        "Name": "version",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FileStorage.Controllers.UsersController",
    "Method": "GetUserInfo",
    "RelativePath": "v{version}/users/info",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "version",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "FileStorage.Models.Outcoming.UserInfoDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "FileStorage.Controllers.UsersController",
    "Method": "PathUserProfile",
    "RelativePath": "v{version}/users/profile",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "newData",
        "Type": "FileStorage.Models.Incoming.User.UserPatchProfileDto",
        "IsRequired": true
      },
      {
        "Name": "version",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FileStorage.Controllers.UsersController",
    "Method": "GetUserUsage",
    "RelativePath": "v{version}/users/usage",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "version",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  }
]